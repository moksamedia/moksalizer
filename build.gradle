/*
 * NOTES
 * 
 * ORM: 
 *    - Kundera: JPA compliant, easily switch between NoSQL and relational databases, uses SQL-like query langauge (ugh)
 *    - Morphia: mongodb-specific, not actively developed
 *    - Spring Data: heavy, provides decent separation
 *    
 * SECURITY:
 *    - Spring: role-based, XML
 *    - Apache Shiro: INI files
 * 
 */

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'jetty'

// PROJECT VERSION & GROUP
project.version = 0.1
project.group = 'com.moksamedia.moksalizer'

// CAPTURE STANDARD OUTPUT
logging.captureStandardOutput(LogLevel.ERROR)

import org.slf4j.Logger
import org.slf4j.LoggerFactory

Logger log = LoggerFactory.getLogger("build-logger")

repositories {
	mavenCentral()
}
	
dependencies {
		
	/* JUNIT */
	testCompile 'junit:junit:4.10'
		
	/* LOGGING */
	compile 'org.slf4j:slf4j-api:1.7.4',
			'ch.qos.logback:logback-classic:1.0.1'  // Logback
			//'org.slf4j:slf4j-log4j12:1.7.4',	    // Log4j
			//'log4j:log4j:1.2.17'		
	
	/* GROOVY */
	groovy 'org.codehaus.groovy:groovy-all:1.8.+'
	
	/* SERVLET API 2.5 */
	compile 'javax.servlet:servlet-api:2.5'
	
	/* JAX-RS (JSR 311) API */
	compile 'javax.ws.rs:jsr311-api:1.1.1'
	
	/* JERSEY */
	compile 'com.sun.jersey:jersey-bundle:1.17'
	
	/* MONGO JAVA DRIVER */
	compile 'org.mongodb:mongo-java-driver:2.10.1'
	
	/* MORPHIA (https://github.com/jmkgreen/morphia) */
	compile 'com.github.jmkgreen.morphia:morphia:1.2.2'
}

war {
	webXml = file('web.xml')
}